---
job: dpcp-ci-demo

registry_host: harbor.mellanox.com
registry_auth: rivermax_harbor_credentials

credentials:
  - {credentialsId: 'dpcp_admin_cov_credentials', usernameVariable: 'DPCP_COV_USER', passwordVariable: 'DPCP_COV_PASSWORD'}
  - {credentialsId: 'mellanox_github_credentials', usernameVariable: 'MELLANOX_GH_USER', passwordVariable: 'MELLANOX_GH_TOKEN'}

kubernetes:
  cloud: swx-k8s-spray

  limits: '{memory: 8Gi, cpu: 8000m}'
  requests: '{memory: 8Gi, cpu: 8000m}'

volumes:
  - {mountPath: /hpc/local, hostPath: /hpc/local}
  - {mountPath: /auto/sw_tools, hostPath: /auto/sw_tools}
  - {mountPath: /auto/sw/release/sw_acceleration, hostPath: /auto/sw/release/sw_acceleration}

runs_on_dockers:
# base
  - {file: '.dockers/Dockerfile.ubuntu22.04', arch: 'x86_64', name: 'ubuntu22.04', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '22.04', category: ['base', 'build-test'], build_args: '--build-arg ARCH=x86_64 --no-cache --target build'}
  - {file: '.dockers/Dockerfile.ubuntu22.04', arch: 'aarch64', name: 'ubuntu22.04', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '22.04', category: 'base', build_args: '--build-arg ARCH=aarch64 --no-cache --target build'}
  - {file: '.dockers/Dockerfile.ubuntu24.04', arch: 'x86_64', name: 'ubuntu24.04', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '24.04', category: ['base', 'build-test'], build_args: '--build-arg ARCH=x86_64 --no-cache'}
  - {file: '.dockers/Dockerfile.ubuntu24.04', arch: 'aarch64', name: 'ubuntu24.04', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '24.04', category: 'base', build_args: '--build-arg ARCH=aarch64 --no-cache'}
  - {file: '.dockers/Dockerfile.rhel8.4', arch: 'x86_64', name: 'rhel8.4', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.4', category: ['base', 'build-test'], build_args: '--build-arg ARCH=x86_64 --no-cache'}
  - {file: '.dockers/Dockerfile.rhel8.4', arch: 'aarch64', name: 'rhel8.4', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.4', category: 'base', build_args: '--build-arg ARCH=aarch64 --no-cache'}
  - {file: '.dockers/Dockerfile.rhel8.6', arch: 'x86_64', name: 'rhel8.6', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.6', category: 'base',build_args: '--build-arg ARCH=x86_64 --no-cache'}
  - {file: '.dockers/Dockerfile.rhel8.6', arch: 'aarch64', name: 'rhel8.6', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.6', category: 'base', build_args: '--build-arg ARCH=aarch64 --no-cache'}
  - {file: '.dockers/Dockerfile.rhel9.2', arch: 'x86_64', name: 'rhel9.2', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '9.2', category: 'base', build_args: '--no-cache'}
  - {file: '.dockers/Dockerfile.oel8.4', arch: 'x86_64', name: 'oel8.4', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.4', category: 'base', build_args: '--no-cache'}
  - {file: '.dockers/Dockerfile.oel8.6', arch: 'x86_64', name: 'oel8.6', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.6', category: 'base', build_args: '--no-cache'}
  - {file: '.dockers/Dockerfile.oel8.7', arch: 'x86_64', name: 'oel8.7', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/core', tag: '8.7', category: 'base', build_args: '--no-cache'}
# tool
  - {file: '.dockers/Dockerfile.ubuntu22.04', arch: 'x86_64', name: 'toolbox', url: 'harbor.mellanox.com/rivermax/dpcp/$arch/$name/toolbox', tag: '20240820', category: 'tool', build_args: '--build-arg ARCH=x86_64 --no-cache --target toolbox'}
  - {name: 'header-check', url: 'harbor.mellanox.com/toolbox/header_check:0.0.51', arch: 'x86_64', tag: '0.0.51', category: 'tool', build_args: '--no-cache'}
  - {name: 'secret-scan', url: 'harbor.mellanox.com/toolbox/secret_scan:0.0.23', arch: 'x86_64', tag: '0.0.23', category: 'tool', build_args: '--no-cache'}

runs_on_agents:
  - {nodeLabel: 'beni09', category: 'base'}

# Fail job if one of the steps fails or continue
failFast: false

steps:
  - name: Setup
    run: |
        set +x
        echo
        echo "======================================================"
        echo "name: ${name}"
        echo "arch: ${arch}"
        echo "url: ${uri}"
        echo "tag: ${tag}"
        echo "variant: ${variant}"
        echo "category: ${category}"
        echo "======================================================"
        echo
        printenv
    parallel: false

  - name: Copyrights
    enable: ${do_copyrights}
    credentialsId: 'mellanox_github_credentials'
    run: env WORKSPACE=$PWD GITHUB_TOKEN=$MELLANOX_GH_TOKEN ./contrib/jenkins_tests/copyrights.sh
    containerSelector:
      - "{name: 'header-check', category: 'tool'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    archiveArtifacts: '*.log,*.tar.gz'
    parallel: false

  - name: Secret Scan
    credentialsId: 'mellanox_github_credentials'
    enable: ${do_secretscan}
    containerSelector:
      - "{name: 'secret-scan', category: 'tool'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    run: |
      env GITHUB_TOKEN=$MELLANOX_GH_TOKEN /opt/nvidia/secret_scan.py --path $WORKSPACE --git-repo $WORKSPACE --report-file secret_scan.html
    archiveArtifacts: '*.html'
    parallel: false

  - name: Install Doca-host
    containerSelector:
      - "{category: 'base'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    run: |
      echo "Installing DOCA: ${DOCA_VERSION} ..."
      .ci/scripts/doca_install.sh

  - name: Install Doca-host on Tools
    run: |
      echo "Installing DOCA: ${DOCA_VERSION} ..."
      .ci/scripts/doca_install.sh
    containerSelector:
      - "{name: 'toolbox', category: 'tool'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"

  - name: Autogen
    run: |
      ./autogen.sh -s
    parallel: false

  - name: Build
    run: |
        env DISTRO=$name \
            JENKINS_RUN_TESTS=no \
            jenkins_test_build=yes \
            jenkins_test_compiler=no \
            jenkins_test_rpm=yes \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{category: 'build-test', variant:1}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    archiveArtifacts: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'

  - name: Build
    run: |
        env WORKSPACE=$(pwd) \
            DISTRO=$name \
            JENKINS_RUN_TESTS=no \
            jenkins_test_build=yes \
            jenkins_test_compiler=no \
            jenkins_test_rpm=yes \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    archiveArtifacts: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'
    containerSelector:
      - "{name: 'skip-container'}"
    agentSelector:
      - "{nodeLabel: 'beni09'}"
    archiveArtifacts: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'

  - name: Gtest
    run: |
        env JENKINS_RUN_TESTS=yes \
            jenkins_test_build=yes \
            jenkins_test_compiler=no \
            jenkins_test_rpm=no \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=yes \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{name: 'skip-container'}"
    agentSelector:
      - "{nodeLabel: 'beni09'}"
    archiveJunit: |
      jenkins/**/*.xml

  - name: Coverity
    enable: ${do_coverity}
    credentialsId: 'dpcp_admin_cov_credentials'
    run: |
        env JENKINS_RUN_TESTS=yes \
            jenkins_test_build=no \
            jenkins_test_compiler=no \
            jenkins_test_rpm=no \
            jenkins_test_cov=yes \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    publishHTML:
      reportDir: 'jenkins/default/cov/cov_build_${BUILD_NUMBER}/output/errors/'
      reportFiles: 'jenkins/default/cov/cov_build_${BUILD_NUMBER}/output/errors/index.html'
      reportName: Coverity Report
      allowMissing: true
    containerSelector:
      - "{name: 'toolbox', category: 'tool'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    archiveArtifacts-onfail: |
      jenkins/**/*.tar.gz

  - name: Build RPM/DEB
    run: |
        env JENKINS_RUN_TESTS=no \
            jenkins_test_build=yes \
            jenkins_test_compiler=no \
            jenkins_test_rpm=yes \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh

  - name: Compilers
    run: |
        env JENKINS_RUN_TESTS=no \
            jenkins_test_build=no \
            jenkins_test_compiler=yes \
            jenkins_test_rpm=no \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{name: 'ubuntu24.04'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    archiveArtifacts-onfail: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'

  - name: CppCheck
    run: |
        env JENKINS_RUN_TESTS=yes \
            jenkins_test_build=no \
            jenkins_test_compiler=no \
            jenkins_test_rpm=no \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=yes \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{name: 'skip-container'}"
    agentSelector:
      - "{nodeLabel: 'beni09'}"
    archiveArtifacts-onfail: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'

  - name: CSBuild
    run: |
        env JENKINS_RUN_TESTS=yes \
            jenkins_test_build=no \
            jenkins_test_compiler=no \
            jenkins_test_rpm=no \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=yes \
            jenkins_test_gtest=no \
            jenkins_test_style=no \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{name: 'skip-container'}"
    agentSelector:
      - "{nodeLabel: 'beni09'}"
    archiveArtifacts-onfail: 'jenkins/dpcp-${BUILD_ID}-*.tar.gz'

  - name: Style Check
    run: |
        JENKINS_RUN_TESTS=yes \
            jenkins_test_build=no \
            jenkins_test_compiler=no \
            jenkins_test_rpm=no \
            jenkins_test_cov=no \
            jenkins_test_cppcheck=no \
            jenkins_test_csbuild=no \
            jenkins_test_gtest=no \
            jenkins_test_style=yes \
            ./contrib/test_jenkins.sh
    containerSelector:
      - "{name: 'toolbox', category: 'tool'}"
    agentSelector:
      - "{nodeLabel: 'skip-agent'}"
    archiveArtifacts: 'jenkins/*.tar.gz'
