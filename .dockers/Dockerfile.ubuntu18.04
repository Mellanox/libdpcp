ARG ARCH=x86_64
FROM harbor.mellanox.com/swx-infra/$ARCH/ubuntu18.04/core:latest
ARG _UID=6213
ARG _GID=11429
ARG _LOGIN=swx-jenkins
ARG _HOME=/var/home/

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y \
        sudo \
        automake \
        default-jdk \
        dh-make \
        g++ \
        git \
        libcap2 \
        libnuma-dev \
        libtool \
        make \
        maven \
        udev \
        wget \
        vim \
        net-tools \
        iputils-ping \
        environment-modules \
        libibverbs-dev \
        libfile-fcntllock-perl \
        chrpath flex gfortran graphviz dpatch libgfortran3 tcl bison tk swig \
        libnl-route-3-dev libnl-3-dev kmod python lsof pciutils ethtool libmnl0 pkg-config \
        lsb-release \
	libusb-1.0-0 libfuse2 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# MOFED
ARG MOFED_VERSION=23.07-0.5.1.2
ARG UBUNTU_VERSION=18.04
ARG MOFED_OS=ubuntu${UBUNTU_VERSION}
ARG ARCH=x86_64
ENV MOFED_DIR MLNX_OFED_LINUX-${MOFED_VERSION}-${MOFED_OS}-${ARCH}
ENV MOFED_SITE_PLACE MLNX_OFED-${MOFED_VERSION}
ENV MOFED_IMAGE ${MOFED_DIR}.tgz

RUN wget --no-verbose http://content.mellanox.com/ofed/${MOFED_SITE_PLACE}/${MOFED_IMAGE} && \
    tar -xzf ${MOFED_IMAGE}

RUN ${MOFED_DIR}/mlnxofedinstall --all -q \
	--force \
	--upstream-libs \
	--vma \
	--user-space-only \
	--without-fw-update \
	--skip-unsupported-devices-check \
	--without-libxlio \
	--without-libxlio-utils \
	--without-libxlio-dev \
        --distro ${MOFED_OS} \
    && rm -rf ${MOFED_DIR} && rm -rf *.tgz

RUN echo "$_LOGIN ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    mkdir -p $_HOME && \
    groupadd -f -g "$_GID" "$_LOGIN" && \
    useradd -u "$_UID" -g "$_GID" -s /bin/bash -m -d ${_HOME} "$_LOGIN" && \
    usermod -aG sudo $_LOGIN

# W/A for libvma installation issue under docker environment
RUN touch /etc/init.d/vma && chmod +x /etc/init.d/vma

ENV MODULEPATH /hpc/local/etc/modulefiles
SHELL ["/bin/bash"]

USER "$_LOGIN"
ENTRYPOINT [ "/bin/bash", "--login", "--rcfile", "/etc/bashrc", "-c" ]
